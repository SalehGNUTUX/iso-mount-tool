#!/bin/bash

# إعدادات أولية
iso_dir="$HOME/iso"
mnt_dir="/mnt"
temp_file="/tmp/iso_selection.tmp"

# تفعيل عدم التمييز بين الأحرف
shopt -s nocasematch

# دالة عرض الشعار
display_logo() {
  echo -e "\033[1;36m"  # اللون السماوي
  cat << "EOF"
  ___
 |_ _|
  | |
  | |
 |___|       __  __
            |  \/  |
            | |\/| |
            | |  | |
            |_|  |_|        _____
                           |_   _|
                             | |
                             | |
                             |_|



EOF
  echo -e "\033[1;33m"  # اللون الأصفر
  echo "Iso Mount tool by GNUTUX"
  echo -e "\033[0m"     # إعادة تعيين اللون
  sleep 1
}

# دالة لعرض الملفات المضمومة
show_mounted() {
    clear
    display_logo
    echo "
    ==============================
    |   الملفات المضمومة حالياً  |
    ==============================
    "
    mounted=($(findmnt -n -l -o TARGET | grep "$mnt_dir"))

    if [ ${#mounted[@]} -eq 0 ]; then
        echo "    لا توجد ملفات مضمومة"
    else
        for ((i=0; i<${#mounted[@]}; i++)); do
            echo "    $((i+1)). ${mounted[$i]}"
        done
    fi

    echo "
    ==============================
    اضغط Enter للعودة...
    "
    read
}

# دالة إلغاء الضم
# دالة إلغاء الضم المعدلة
unmount_iso() {
    while true; do
        clear
        display_logo
        # استخدام mapfile للتعامل مع المسارات التي تحتوي على مسافات
        mapfile -t mounted < <(findmnt -n -l -o TARGET | grep "$mnt_dir")

        echo "
        ==============================
        |     إلغاء ضم ملف ISO      |
        ==============================
        | الملفات المضمومة حالياً:  |
        "

        if [ ${#mounted[@]} -eq 0 ]; then
            echo "        لا توجد ملفات مضمومة"
        else
            for ((i=0; i<${#mounted[@]}; i++)); do
                echo "        $((i+1)). ${mounted[$i]}"
            done
        fi

        echo "
        ==============================
        | 1. إلغاء ضم ملف           |
        | 0. رجوع                   |
        ==============================
        "
        read -p "اختر خياراً [0-1]: " sub_choice

        case $sub_choice in
            1)
                if [ ${#mounted[@]} -gt 0 ]; then
                    read -p "أدخل رقم الملف: " file_num
                    if [[ $file_num -ge 1 && $file_num -le ${#mounted[@]} ]]; then
                        mount_point="${mounted[$((file_num-1))]}"
                        if sudo umount "$mount_point"; then
                            sudo rmdir "$mount_point"
                            echo "تم إلغاء الضم بنجاح"
                        else
                            echo "فشل في إلغاء الضم!"
                        fi
                        sleep 1
                    else
                        echo "رقم غير صحيح!"
                        sleep 1
                    fi
                else
                    echo "لا توجد ملفات مضمومة!"
                    sleep 1
                fi
                ;;
            0)
                return
                ;;
            *)
                echo "اختيار غير صحيح!"
                sleep 1
                ;;
        esac
    done
}

# دالة اختيار ملف ISO
select_iso_file() {
    selected=$(zenity --file-selection \
        --title="اختر ملف ISO أو IMG" \
        --file-filter="ملفات القرص | *.iso *.img *.ISO *.IMG" \
        --filename="$iso_dir/" 2>/dev/null)

    [ -z "$selected" ] && return 1

    iso_dir=$(dirname "$selected")
    echo "$selected" > "$temp_file"
}

# دالة الضم الرئيسية
mount_iso() {
    while true; do
        clear
        display_logo
        echo "
        ==============================
        |        ضم ملف ISO         |
        ==============================
        | 1. اختر ملف ISO للضم      |
        | 2. عرض الملفات المضمومة  |
        | 0. رجوع                   |
        ==============================
        "
        read -p "اختر خياراً [0-2]: " choice

        case $choice in
            1)
                if select_iso_file; then
                    iso_path=$(cat "$temp_file")
                    mount_point="$mnt_dir/$(basename "$iso_path" | cut -d. -f1)"

                    sudo mkdir -p "$mount_point"
                    if sudo mount -o loop "$iso_path" "$mount_point"; then
                        zenity --info --text="تم ضم الملف بنجاح في: $mount_point" --width=300
                    else
                        zenity --error --text="فشل في ضم الملف!" --width=200
                    fi
                fi
                ;;
            2)
                show_mounted
                ;;
            0)
                return
                ;;
            *)
                echo "اختيار غير صحيح!"
                sleep 1
                ;;
        esac
    done
}

# دالة الإعداد الرئيسية
setup_iso_dir() {
    while true; do
        clear
        display_logo
        echo "
        ==============================
        |      إعداد مجلد ISO       |
        ==============================
        | 1. إنشاء مجلد ISO جديد   |
        | 2. فتح مدير الملفات       |
        | 0. رجوع                   |
        ==============================
        "
        read -p "اختر خياراً [0-2]: " sub_choice

        case $sub_choice in
            1)
                mkdir -p "$iso_dir"
                zenity --info --text="تم إنشاء المجلد: $iso_dir" --width=200
                ;;
            2)
                xdg-open "$iso_dir" &
                ;;
            0)
                return
                ;;
            *)
                echo "اختيار غير صحيح!"
                sleep 1
                ;;
        esac
    done
}

# دالة التحقق من الاعتماديات
check_dependencies() {
    missing=()
    
    # الاعتماديات الأساسية
    if ! command -v zenity &> /dev/null; then
        missing+=("zenity (واجهة المستخدم الرسومية)")
    fi
    
    # اعتماديات فك الضغط
    if ! command -v 7z &> /dev/null; then
        missing+=("p7zip (لفك ضغط الملفات)")
    fi
    
    # اعتماديات الضم
    if ! command -v mount &> /dev/null; then
        missing+=("mount (لضم الملفات)")
    fi
    
    if [ ${#missing[@]} -gt 0 ]; then
        zenity --error --text="الإعتماديات الناقصة:\n\n${missing[*]}\n\nالرجاء تثبيتها قبل المتابعة." --width=400
        return 1
    fi
    return 0
}

# دالة فك ضغط ملف ISO مع التحقق من الملفات المكررة

extract_iso() {
    # التحقق من الاعتماديات أولاً
    if ! command -v 7z &> /dev/null; then
        zenity --error --text="الأداة 7z غير مثبتة!\n\nالرجاء تثبيتها بأحد الأمرين:\n\nsudo apt install p7zip-full   # لأوبونتو/ديبيان\nsudo yum install p7zip        # لـRHEL/CentOS" --width=500
        return
    fi

    clear
    display_logo
    echo "
    ==============================
    |      فك ضغط ملف ISO       |
    ==============================
    "
    if select_iso_file; then
        iso_path=$(cat "$temp_file")
        echo "
        ==============================
        | 1. فك الضغط هنا           |
        | 2. فك الضغط في مجلد آخر   |
        | 0. رجوع                   |
        ==============================
        "
        read -p "اختر خياراً [0-2]: " extract_choice

        case $extract_choice in
            1)
                output_dir="$(dirname "$iso_path")/$(basename "$iso_path" .iso)_extracted"
                ;;
            2)
                output_dir=$(zenity --file-selection --directory --title="اختر مجلد الوجهة" 2>/dev/null)
                [ -z "$output_dir" ] && return
                ;;
            0)
                return
                ;;
            *)
                echo "اختيار غير صحيح!"
                sleep 1
                return
                ;;
        esac

        # التحقق إذا كان المجلد الهدف موجوداً ويحتوي على ملفات
        if [ -d "$output_dir" ] && [ "$(ls -A "$output_dir")" ]; then
            choice=$(zenity --list --title="ملفات موجودة مسبقاً" --text="المجلد الهدف يحتوي على ملفات موجودة مسبقاً:" --column="خيار" "استبدال الكل" "تخطي الملفات الموجودة" "إلغاء العملية" --width=400 --height=200)
            
            case $choice in
                "استبدال الكل")
                    rm -rf "${output_dir:?}/"*
                    ;;
                "تخطي الملفات الموجودة")
                    extract_option="-aou"
                    ;;
                "إلغاء العملية"|*)
                    return
                    ;;
            esac
        else
            mkdir -p "$output_dir"
        fi

        echo "جاري فك الضغط، يرجى الانتظار..."
        
        if 7z x "$iso_path" -o"$output_dir" $extract_option >/dev/null 2>&1; then
            zenity --info --text="تم فك الضغط بنجاح في: $output_dir" --width=400
        else
            zenity --error --text="فشل في فك الضغط!" --width=200
        fi
    fi
    # العودة تلقائياً بعد الانتهاء دون طلب ملف جديد
    sleep 1
}
# تحديث القائمة الرئيسية للتحقق من الاعتماديات أولاً
main_menu() {
    # التحقق من الاعتماديات عند البدء
    if ! check_dependencies; then
        echo "الاعتماديات الناقصة تمنع تشغيل البرنامج."
        exit 1
    fi

    while true; do
        clear
        display_logo
        echo -e "\033[1;34m"
        cat << "EOF"
┌──────────────────────────────────────┐
│   أداة متقدمة لإدارة ملفات ISO/IMG   │
│  مع واجهة سهلة وخصائص متكاملة       │
└──────────────────────────────────────┘
EOF
        echo "
        ==============================
        |     أداة إدارة ملفات إيزو   |
        ==============================
        | مسار ISO الحالي: $iso_dir
        ==============================
        | 1. إعداد مجلد ISO         |
        | 2. ضم ملف ISO             |
        | 3. إلغاء ضم ملف ISO       |
        | 4. عرض الملفات المضمومة  |
        | 5. فك ضغط ملف ISO         |
        | 0. خروج                    |
        ==============================
        "
        read -p "اختر خياراً [0-5]: " choice

        case $choice in
            1) setup_iso_dir ;;
            2) mount_iso ;;
            3) unmount_iso ;;
            4) show_mounted ;;
            5) extract_iso ;;
            0)
                rm -f "$temp_file" 2>/dev/null
                echo "مع السلامة!"
                exit 0
                ;;
            *)
                echo "اختيار غير صحيح!"
                sleep 1
                ;;
        esac
    done
}

# بدء البرنامج
main_menu
